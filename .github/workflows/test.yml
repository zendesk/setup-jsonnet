name: Test

on: push

jobs:
  install_specific_version:
    name: Install specific version of Jsonnet and print version
    runs-on: ubuntu-latest
    env:
      version: v0.18.0
    steps:
      - uses: zendesk/checkout@v4
      - uses: zendesk/setup-go@v5
        with:
          go-version: '^1.16.0' # Go >= 1.16 to have go install
      - name: Setup Jsonnet
        uses: ./
        with:
          version: ${{ env.version }}
          github_token: ${{ github.token }}
      - name: Print Jsonnet version
        run: |
          jsonnet_version=$(jsonnet -v)
          echo "$jsonnet_version"
          if [[ ${jsonnet_version} != *"$version"* ]];then
            echo "Cannot find $version"
            echo 1
          fi
      - name: Print Jsonnet reformatter version
        run: |
          jsonnet_version=$(jsonnetfmt -v)
          echo "$jsonnet_version"
          if [[ ${jsonnet_version} != *"$version"* ]];then
            echo "Cannot find $version"
            echo 1
          fi
      - name: Print Jsonnet dependency parser version
        run: |
          jsonnet_version=$(jsonnet-deps -v)
          echo "$jsonnet_version"
          if [[ ${jsonnet_version} != *"$version"* ]];then
            echo "Cannot find $version"
            echo 1
          fi
      - name: Print Jsonnet linter version
        run: |
          jsonnet_version=$(jsonnet-lint -v)
          echo "$jsonnet_version"
          if [[ ${jsonnet_version} != *"$version"* ]];then
            echo "Cannot find $version"
            echo 1
          fi

  install_latest:
    name: Install latest version of Jsonnet and print version
    runs-on: ubuntu-latest
    steps:
      - uses: zendesk/checkout@v4
      - uses: zendesk/setup-go@v5
        with:
          go-version: '^1.16.0' # Go >= 1.16 to have go install
      - name: Setup Jsonnet
        uses: ./
        with:
          github_token: ${{ github.token }}
      - name: Print Jsonnet version
        run: jsonnet -v
      - name: Print Jsonnet reformatter version
        run: jsonnetfmt -v
      - name: Print Jsonnet dependency parser version
        run: jsonnet-deps -v
      - name: Print Jsonnet linter version
        run: jsonnet-lint -v

  expected_failure_go:
    name: Expected failure due to outdated Go version
    runs-on: ubuntu-latest
    steps:
      - uses: zendesk/checkout@v4
      - uses: zendesk/setup-go@v5
        with:
          go-version: '1.13.8'
      - name: Setup Jsonnet
        uses: ./
        continue-on-error: true
        id: jsonnet
        with:
          github_token: ${{ github.token }}
      - name: Expect failure
        run: |
          [[ "${{ steps.jsonnet.outcome }}" == "failure" ]] && [[ "${{ steps.jsonnet.conclusion }}" == "success" ]]
